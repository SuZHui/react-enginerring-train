{"version":3,"file":"js/Battle.891f9e64.js","mappings":"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","sources":["webpack://react-enginerring-train/./src/api/index.js","webpack://react-enginerring-train/./src/pages/Battle/Instructions.jsx","webpack://react-enginerring-train/./src/components/PlayerInput/style.module.scss?2d8e","webpack://react-enginerring-train/./src/components/PlayerInput/index.jsx","webpack://react-enginerring-train/./src/pages/Battle/index.js"],"sourcesContent":["import Axios from 'axios'\r\nimport { Modal } from 'antd'\r\nimport useSWRInfinite from 'swr/infinite'\r\nimport useSWR from 'swr'\r\nimport { useRef } from 'react'\r\n\r\nlet modal\r\n\r\nconst client = Axios.create({})\r\nclient.interceptors.response.use(\r\n  (res) => res.data,\r\n  (err) => {\r\n    if (Axios.isCancel(err)) {\r\n      console.log('Request canceled', err)\r\n    } else {\r\n      // 系统级错误 弹窗提示\r\n      if (!modal) {\r\n        const message = (() => {\r\n          let t = 'Request failed'\r\n          if (err.response && err.response.data) {\r\n            t = err.response.data.message || t\r\n          } else if (err.message) {\r\n            t = err.message\r\n          }\r\n          return t\r\n        })()\r\n        modal = Modal.error({\r\n          title: 'Error',\r\n          content: message,\r\n          afterClose: () => (modal = null),\r\n        })\r\n      }\r\n    }\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default {\r\n  getList(type) {\r\n    const fetcher = (url) => client.get(url)\r\n    type = type.toLowerCase() !== 'all' ? `+language:${type}` : ''\r\n    const getKey = (index) => {\r\n      return `https://api.github.com/search/repositories?q=stars:%3E1${type}&sort=stars&order=desc&type=Repositories&per_page=30&page=${\r\n        index + 1\r\n      }`\r\n    }\r\n    return useSWRInfinite(getKey, fetcher, {\r\n      shouldRetryOnError: false,\r\n      revalidateFirstPage: false,\r\n    })\r\n  },\r\n  getUser(name) {\r\n    return client.get(`https://api.github.com/users/${name}`)\r\n  },\r\n  getUser2(name) {\r\n    const key = name ? `https://api.github.com/users/${name}` : null\r\n    const fetcher = (url) => client.get(url)\r\n    return useSWR(key, fetcher, {\r\n      shouldRetryOnError: false,\r\n      revalidateOnFocus: false\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers, faFighterJet, faTrophy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Instructions() {\r\n  return (\r\n    <div>\r\n      <h2 className=\"tc\">Instructions</h2>\r\n      {/* className=\"flex justify-center\" */}\r\n      <Row justify=\"center\">\r\n        <Col\r\n          xs={{ span: 16 }}\r\n          sm={{ span: 8 }}\r\n          md={{ span: 6 }}\r\n          lg={{ span: 4 }}\r\n          xxl={3}\r\n        >\r\n          <div className=\"tc mb4\">\r\n            <p className=\"fw6\">Enter Two Github</p>\r\n            <div className=\"pa4 bg-light-gray mh3\">\r\n              <FontAwesomeIcon icon={faUsers} size=\"5x\" color=\"#ffbf74\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xs={{ span: 16 }}\r\n          sm={{ span: 8 }}\r\n          md={{ span: 6 }}\r\n          lg={{ span: 4 }}\r\n          xxl={3}\r\n        >\r\n          <div className=\"tc mb4\">\r\n            <p className=\"fw6\">Battle</p>\r\n            <div className=\"pa4 bg-light-gray mh3\">\r\n              <FontAwesomeIcon icon={faFighterJet} size=\"5x\" color=\"gray\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xs={{ span: 16 }}\r\n          sm={{ span: 8 }}\r\n          md={{ span: 6 }}\r\n          lg={{ span: 4 }}\r\n          xxl={3}\r\n        >\r\n          <div className=\"tc mb4\">\r\n            <p className=\"fw6\">See The Winner</p>\r\n            <div className=\"pa4 bg-light-gray mh3\">\r\n              <FontAwesomeIcon icon={faTrophy} size=\"5x\" color=\"rgb(244, 234, 42)\" fixedWidth />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"UXaxDgY_QMyFQhVFX_6k\"};","import React, { useState, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Input, Button, Image, Spin } from 'antd'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useFormik } from 'formik'\r\nimport API from '@/api'\r\nimport styles from './style.module.scss'\r\n\r\nconst usePlayerInput = () => {\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [player, setPlayer] = useState(null)\r\n  const listener = useRef({\r\n    error: null\r\n  })\r\n  \r\n  const fetch = name => {\r\n    setLoading(true)\r\n    API.getUser(name)\r\n      .then(res => {\r\n        setPlayer(res)\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n        setPlayer(null)\r\n        if (listener.current.error) {\r\n          listener.current.error(err)\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return {\r\n    player,\r\n    isLoading,\r\n    submit: fetch,\r\n    onError: cb => listener.current.error = cb,\r\n    clearPlayer: () => setPlayer(null)\r\n  }\r\n}\r\nexport default function PlayerInput ({ onChange }) {\r\n  const { player, isLoading, submit, clearPlayer, onError }  = usePlayerInput()\r\n  const handleClear = () => {\r\n    clearPlayer()\r\n    formik.setValues({ name: '' })\r\n    onChange(null)\r\n  }\r\n\r\n  /**\r\n   * TODO: 是否需要调整\r\n   * 在触发错误的时候并不会清空输入框中的输入内容\r\n   * 但是会触发onChange事件\r\n   * 此时组件内外的数据将会出现不同步的情况\r\n   * 即 父组件（监听方）数据被清空，而子组件（调用方）输入状态却还保留\r\n   */\r\n  onError(() => {\r\n    clearPlayer()\r\n    onChange(null)\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: ''\r\n    },\r\n    onSubmit: (values) => {\r\n      const name = values.name.toLowerCase()\r\n      submit(name)\r\n      onChange(name)\r\n    }\r\n  })\r\n\r\n  // const style = {\r\n  //   width: 'calc(100% - 86px)',\r\n  //   maxWidth: 246\r\n  // }\r\n  return player\r\n      ? (\r\n        <div\r\n          className=\"br3 bg-light-gray flex items-center justify-between pa2\"\r\n        >\r\n          <div\r\n            className=\"flex items-center\"\r\n          >\r\n            <Image\r\n              className=\"br3\"\r\n              src={player.avatar_url}\r\n              width={48}\r\n              height={48}\r\n              preview={false}\r\n              placeholder={\r\n                <div className=\"flex items-center justify-center h-100\">\r\n                  <Spin />\r\n                </div>\r\n              }/>\r\n            <span className=\"ml2 fw6 f3 blue\">{ player.login }</span>\r\n          </div>\r\n          <div\r\n            className=\"pointer\"\r\n            onClick={handleClear}\r\n          >\r\n            <FontAwesomeIcon icon={faTimesCircle} color=\"red\" size=\"2x\" />\r\n          </div>\r\n        </div>\r\n      )\r\n      : (\r\n        <Input.Group\r\n          compact\r\n          size='large'\r\n        >\r\n          <Input\r\n            name=\"name\"\r\n            className={styles.input}\r\n            maxLength={30}\r\n            value={formik.values.name}\r\n            disabled={isLoading}\r\n            onChange={formik.handleChange}\r\n            placeholder=\"github username\" />\r\n          <Button\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            loading={isLoading}\r\n            disabled={!formik.values.name}\r\n            onClick={formik.handleSubmit}\r\n            >\r\n              Submit</Button>\r\n        </Input.Group>\r\n      )\r\n}\r\n\r\nPlayerInput.propTypes = {\r\n  onChange: PropTypes.func\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useNavigate, createSearchParams } from 'react-router-dom'\r\nimport { Row, Col, Button } from 'antd'\r\nimport Instructions from './Instructions'\r\nimport PlayerInput from '@/components/PlayerInput'\r\n\r\nexport default function Battle () {\r\n  const navigate = useNavigate()\r\n  const [model, setModel] = useState({\r\n    p1: null,\r\n    p2: null\r\n  })\r\n\r\n  const setP1 = p => setModel({ ...model, p1: p })\r\n  const setP2 = p => setModel({ ...model, p2: p })\r\n  // 跳转至结果页\r\n  const handleBattle = () => {\r\n    navigate({\r\n      pathname: '/result',\r\n      search: `?${createSearchParams({\r\n        p1: model.p1,\r\n        p2: model.p2\r\n      })}`\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"battle pt4\">\r\n      <Instructions />\r\n      <div className=\"pb4\">\r\n        <h2 className=\"tc mb3\">Players</h2>\r\n        <Row justify='center'>\r\n          <Col\r\n            xs={20}\r\n            md={10}>\r\n            <div className=\"ph4 tc\">\r\n              <h2>Player One</h2>\r\n              <PlayerInput onChange={setP1}/>\r\n            </div>\r\n          </Col>\r\n          <Col\r\n            xs={20}\r\n            md={10}\r\n          >\r\n            <div className=\"ph4 tc\">\r\n              <h2>Player Two</h2>\r\n              <PlayerInput onChange={setP2} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {\r\n          model.p1 && model.p2 && \r\n            <Row justify=\"center\" className=\"pv5\">\r\n              <Button type=\"primary\"\r\n                size=\"large\"\r\n                onClick={handleBattle}\r\n              >Battle</Button>\r\n            </Row>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["modal","client","Axios","interceptors","response","use","res","data","err","console","log","message","t","Modal","title","content","afterClose","Promise","reject","getList","type","toLowerCase","useSWRInfinite","index","url","get","shouldRetryOnError","revalidateFirstPage","getUser","name","getUser2","key","useSWR","revalidateOnFocus","Instructions","className","justify","xs","span","sm","md","lg","xxl","icon","faUsers","size","color","fixedWidth","faFighterJet","faTrophy","PlayerInput","onChange","useState","isLoading","setLoading","player","setPlayer","listener","useRef","error","submit","API","then","current","onError","cb","clearPlayer","usePlayerInput","formik","useFormik","initialValues","onSubmit","values","src","avatar_url","width","height","preview","placeholder","login","onClick","setValues","faTimesCircle","compact","styles","maxLength","value","disabled","handleChange","loading","handleSubmit","Battle","navigate","useNavigate","p1","p2","model","setModel","p","pathname","search","createSearchParams","propTypes","PropTypes"],"sourceRoot":""}